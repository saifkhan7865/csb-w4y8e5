{"version":3,"sources":["SingleQuotes.js","AllQuotes.js","App.js","index.js"],"names":["SingleQuotes","singleQuotes","author","quote","id","className","AllQuotes","allQuotes","map","index","SINGLE_QUOTE","ALL_QUOTES","SUBMIT_QUOTE","App","useState","quoteId","setQuoteId","showQuote","setShowQuote","setAllQuotes","setSingleQuotes","onButtonClickHandler","e","type","fetch","then","res","json","singleQuote","randomQuote","allQuotesData","quotes","value","onChange","target","placeholder","onClick","rootElement","document","getElementById","createRoot","render"],"mappings":"2JAYeA,EAVM,SAAH,GAA0B,IAApBC,EAAY,EAAZA,aACdC,EAAsBD,EAAtBC,OAAYC,GAAUF,EAAdG,GAAcH,EAAVE,OACpB,OACE,sBAAKE,UAAU,sBAAqB,UAClC,mCAAMH,KACN,qCAAQC,EAAK,SAGnB,ECDeG,EANG,SAAH,GACb,OAD4B,EAATC,UACFC,KAAI,SAACP,EAAcQ,GAAK,OACvC,cAAC,EAAY,CAACR,aAAcA,GAAgB,GAEhD,ECHMS,G,MAAe,gBACfC,EAAa,aACbC,EAAe,eACN,SAASC,IACtB,MAA8BC,qBAAU,mBAAjCC,EAAO,KAAEC,EAAU,KAC1B,EAAkCF,mBAAS,MAAK,mBAAzCG,EAAS,KAAEC,EAAY,KAE9B,EAAkCJ,mBAAS,IAAG,mBAAvCP,EAAS,KAAEY,EAAY,KAC9B,EAAwCL,mBAAS,CAAC,GAAE,mBAA7Cb,EAAY,KAAEmB,EAAe,KAC9BC,EAAuB,SAACC,EAAGC,GAE/B,OADAL,EAAaK,GACLA,GACN,KAAKX,EACHY,MAAM,gCAAD,OAAiCT,IACnCU,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACG,GACLR,EAAgBQ,EAClB,IACF,MACF,KAAKlB,EACHc,MAAM,uCACHC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACI,GACLT,EAAgBS,EAClB,IACF,MACF,KAAKlB,EACHa,MAAM,gCACHC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACK,GACLX,EAA0B,OAAbW,QAAa,IAAbA,OAAa,EAAbA,EAAeC,OAC9B,IAKR,EAEA,OACE,sBAAK1B,UAAU,GAAE,UACf,oBAAIA,UAAU,UAAS,6BAEvB,uBACE2B,MAAOjB,EACPkB,SAAU,SAACX,GAAC,OAAKN,EAAWM,EAAEY,OAAOF,MAAM,EAC3C3B,UAAU,aACV8B,YAAY,qBAGd,yBACE9B,UAAS,uBACPY,IAAcL,EAAe,kBAAoB,IAEnDwB,QAAS,SAACd,GACRD,EAAqBC,EAAGV,EAC1B,EAAE,mBAEK,OAGT,oBAAIP,UAAU,eAAc,oCAE5B,sBAAKA,UAAU,qCAAoC,UACjD,yBACEA,UAAS,uBACPY,IAAcP,EAAe,kBAAoB,IAEnD0B,QAAS,SAACd,GACRD,EAAqBC,EAAGZ,EAC1B,EAAE,yBAEW,OAEf,yBACEL,UAAS,uBACPY,IAAcN,EAAa,kBAAoB,IAEjDyB,QAAS,SAACd,GACRD,EAAqBC,EAAGX,EAC1B,EAAE,sBAEQ,UAId,sBAAKN,UAAU,sBAAqB,UACjCY,IAAcN,GAAc,cAAC,EAAS,CAACJ,UAAWA,KAEjDU,IAAcP,GAAgBO,IAAcL,IAC5C,cAAC,EAAY,CAACX,aAAcA,SAKtC,CC7FA,IAAMoC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC5B,EAAG,M","file":"static/js/main.2082d409.chunk.js","sourcesContent":["import react from \"react\";\n\nconst SingleQuotes = ({ singleQuotes }) => {\n  const { author, id, quote } = singleQuotes;\n  return (\n    <div className=\"flex flex-col my-12\">\n      <h1> {author}</h1>\n      <abbr> {quote} </abbr>\n    </div>\n  );\n};\n\nexport default SingleQuotes;\n","import react from \"react\";\nimport SingleQuotes from \"./SingleQuotes\";\n\nconst AllQuotes = ({ allQuotes }) => {\n  return allQuotes.map((singleQuotes, index) => (\n    <SingleQuotes singleQuotes={singleQuotes} />\n  ));\n};\n\nexport default AllQuotes;\n","import { useState } from \"react\";\nimport AllQuotes from \"./AllQuotes\";\nimport SingleQuotes from \"./SingleQuotes\";\nimport \"./styles.css\";\nconst SINGLE_QUOTE = \"SINGLE_QUOTE\";\nconst ALL_QUOTES = \"ALL_QUOTES\";\nconst SUBMIT_QUOTE = \"SUBMIT_QUOTE\";\nexport default function App() {\n  const [quoteId, setQuoteId] = useState();\n  const [showQuote, setShowQuote] = useState(null);\n  // handle the quotes\n  const [allQuotes, setAllQuotes] = useState([]);\n  const [singleQuotes, setSingleQuotes] = useState({});\n  const onButtonClickHandler = (e, type) => {\n    setShowQuote(type);\n    switch (type) {\n      case SUBMIT_QUOTE:\n        fetch(`https://dummyjson.com/quotes/${quoteId}`)\n          .then((res) => res.json())\n          .then((singleQuote) => {\n            setSingleQuotes(singleQuote);\n          });\n        break;\n      case SINGLE_QUOTE:\n        fetch(\"https://dummyjson.com/quotes/random\")\n          .then((res) => res.json())\n          .then((randomQuote) => {\n            setSingleQuotes(randomQuote);\n          });\n        break;\n      case ALL_QUOTES:\n        fetch(\"https://dummyjson.com/quotes\")\n          .then((res) => res.json())\n          .then((allQuotesData) => {\n            setAllQuotes(allQuotesData?.quotes);\n          });\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"\">\n      <h1 className=\"heading\"> Quotes Website</h1>\n\n      <input\n        value={quoteId}\n        onChange={(e) => setQuoteId(e.target.value)}\n        className=\"input-text\"\n        placeholder=\"Write a quote ID\"\n      />\n\n      <button\n        className={`button mx-12 ${\n          showQuote === SUBMIT_QUOTE ? \"selected-button\" : \"\"\n        }`}\n        onClick={(e) => {\n          onButtonClickHandler(e, SUBMIT_QUOTE);\n        }}\n      >\n        Submit{\" \"}\n      </button>\n\n      <h2 className=\"quote-filter\">Quote website filters </h2>\n\n      <div className=\"flex flex-row justify-center mt-24\">\n        <button\n          className={`button mx-12 ${\n            showQuote === SINGLE_QUOTE ? \"selected-button\" : \"\"\n          }`}\n          onClick={(e) => {\n            onButtonClickHandler(e, SINGLE_QUOTE);\n          }}\n        >\n          Random Quote{\" \"}\n        </button>\n        <button\n          className={`button mx-12 ${\n            showQuote === ALL_QUOTES ? \"selected-button\" : \"\"\n          }`}\n          onClick={(e) => {\n            onButtonClickHandler(e, ALL_QUOTES);\n          }}\n        >\n          All Quote{\" \"}\n        </button>\n      </div>\n\n      <div className=\"mt-48 flex flex-col\">\n        {showQuote === ALL_QUOTES && <AllQuotes allQuotes={allQuotes} />}\n\n        {(showQuote === SINGLE_QUOTE || showQuote === SUBMIT_QUOTE) && (\n          <SingleQuotes singleQuotes={singleQuotes} />\n        )}\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}